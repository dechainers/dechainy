{
    "probes": [
      {
        "plugin": "adaptmon",
        "name": "pkt_counter",
        "mode": "XDP",
        "interface": "wlp0s20f3",
        "ingress": "// Copyright 2020 DeChainy\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nBPF_TABLE(\"array\", int, uint64_t, TOTAL_PACKETS, 1)__attributes__((EXPORT));\n\nstatic __always_inline\nint handler(struct CTXTYPE *ctx, struct pkt_metadata *md) {\n    void *data = (void *) (long) ctx->data;\n    void *data_end = (void *) (long) ctx->data_end;\n\n   /*Parsing L2*/\n    struct eth_hdr *ethernet = data;\n    if (data + sizeof(*ethernet) > data_end)\n        return PASS;\n\n    if (ethernet->proto != bpf_htons(ETH_P_IP))\n        return PASS;\n\n    /*Parsing L3*/\n    struct iphdr *ip = data + sizeof(struct eth_hdr);\n    if (data + sizeof(struct eth_hdr) + sizeof(*ip) > data_end)\n        return PASS;\n\n    TOTAL_PACKETS.increment(0);\n\n    return PASS;\n}",
        "egress": "// Copyright 2020 DeChainy\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nBPF_TABLE(\"array\", int, uint64_t, TOTAL_PACKETS, 1)__attributes__((EXPORT));\n\nstatic __always_inline\nint handler(struct CTXTYPE *ctx, struct pkt_metadata *md) {\n    void *data = (void *) (long) ctx->data;\n    void *data_end = (void *) (long) ctx->data_end;\n\n   /*Parsing L2*/\n    struct eth_hdr *ethernet = data;\n    if (data + sizeof(*ethernet) > data_end)\n        return PASS;\n\n    if (ethernet->proto != bpf_htons(ETH_P_IP))\n        return PASS;\n\n    /*Parsing L3*/\n    struct iphdr *ip = data + sizeof(struct eth_hdr);\n    if (data + sizeof(struct eth_hdr) + sizeof(*ip) > data_end)\n        return PASS;\n\n    TOTAL_PACKETS.increment(0);\n\n    return PASS;\n}",
        "cp_function": "# Copyright 2020 DeChainy\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nfrom dechainy.plugins import Plugin\n\n\ndef reaction_function_rest(probe: Plugin):\n    return {'ingress': probe[\"ingress\"]['TOTAL_PACKETS'][0].value,\n            'egress': probe[\"egress\"]['TOTAL_PACKETS'][0].value}\n\n\ndef reaction_function(probe: Plugin):\n    print(reaction_function_rest(probe), flush=True)\n"
      }
    ],
    "server": {
      "address": "0.0.0.0",
      "port": 8080
    }
  }